
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVIDIDOrightUMENOSBOOLEAN CADENA CORDER CORIZQ DECIMAL DIVIDIDO DOUBLE ENTERO FALSE FLOAT ID IGUAL IGUALQUE INT MAS MAYQUE MENOS MENQUE NIGUALQUE PARDER PARIZQ POR PTCOMA STRING TRUEinstrucciones    : instruccion instrucciones\n                        | instruccion instruccion : INT ID IGUAL expresion2 PTCOMA\n                   | INT ID IGUAL ENTERO PTCOMA\n                   | STRING ID IGUAL CADENA PTCOMA\n                   | STRING ID IGUAL CADENA MAS CADENA PTCOMA\n                   | DOUBLE ID IGUAL DECIMAL PTCOMA\n                   | DOUBLE ID IGUAL expresion PTCOMA\n                   | FLOAT ID IGUAL DECIMAL PTCOMA\n                   | FLOAT ID IGUAL expresion PTCOMA\n                   | BOOLEAN ID IGUAL expresion3 PTCOMA\n                   | INT ID PTCOMA \n                   | STRING ID PTCOMA\n                   | DOUBLE ID PTCOMA\n                   | FLOAT ID PTCOMA \n                   | BOOLEAN ID PTCOMA expresion : expresion MAS expresion\n                  | expresion MENOS expresion\n                  | expresion POR expresion\n                  | expresion DIVIDIDO expresionexpresion2 : ENTERO MAS ENTERO\n                  | ENTERO MENOS ENTERO\n                  | ENTERO POR ENTERO\n                  | ENTERO DIVIDIDO ENTEROexpresion3 : expresion MAYQUE expresion\n                  | expresion MENQUE expresion\n                  | expresion IGUALQUE expresion\n                  | expresion NIGUALQUE expresionexpresion3 : TRUE\n                  | FALSEexpresion : MENOS expresion %prec UMENOSexpresion : PARIZQ expresion PARDERexpresion2 : PARIZQ expresion2 PARDERexpresion    : ENTERO\n                    | DECIMAL'
    
_lr_action_items = {'INT':([0,2,15,17,19,21,23,40,41,48,50,51,58,59,60,80,],[3,3,-12,-13,-14,-15,-16,-3,-4,-5,-7,-8,-9,-10,-11,-6,]),'STRING':([0,2,15,17,19,21,23,40,41,48,50,51,58,59,60,80,],[4,4,-12,-13,-14,-15,-16,-3,-4,-5,-7,-8,-9,-10,-11,-6,]),'DOUBLE':([0,2,15,17,19,21,23,40,41,48,50,51,58,59,60,80,],[5,5,-12,-13,-14,-15,-16,-3,-4,-5,-7,-8,-9,-10,-11,-6,]),'FLOAT':([0,2,15,17,19,21,23,40,41,48,50,51,58,59,60,80,],[6,6,-12,-13,-14,-15,-16,-3,-4,-5,-7,-8,-9,-10,-11,-6,]),'BOOLEAN':([0,2,15,17,19,21,23,40,41,48,50,51,58,59,60,80,],[7,7,-12,-13,-14,-15,-16,-3,-4,-5,-7,-8,-9,-10,-11,-6,]),'$end':([1,2,8,15,17,19,21,23,40,41,48,50,51,58,59,60,80,],[0,-2,-1,-12,-13,-14,-15,-16,-3,-4,-5,-7,-8,-9,-10,-11,-6,]),'ID':([3,4,5,6,7,],[9,10,11,12,13,]),'IGUAL':([9,10,11,12,13,],[14,16,18,20,22,]),'PTCOMA':([9,10,11,12,13,24,25,27,28,29,32,33,34,35,37,38,39,56,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[15,17,19,21,23,40,41,48,50,51,-34,58,59,60,-29,-30,-35,-31,-21,-22,-23,-24,-33,80,-17,-18,-19,-20,-32,-25,-26,-27,-28,]),'ENTERO':([14,18,20,22,26,30,31,42,43,44,45,52,53,54,55,61,62,63,64,],[25,32,32,32,47,32,32,65,66,67,68,32,32,32,32,32,32,32,32,]),'PARIZQ':([14,18,20,22,26,30,31,52,53,54,55,61,62,63,64,],[26,31,31,31,26,31,31,31,31,31,31,31,31,31,31,]),'CADENA':([16,49,],[27,70,]),'DECIMAL':([18,20,22,30,31,52,53,54,55,61,62,63,64,],[28,33,39,39,39,39,39,39,39,39,39,39,39,]),'MENOS':([18,20,22,25,28,29,30,31,32,33,34,36,39,47,52,53,54,55,56,57,61,62,63,64,71,72,73,74,75,76,77,78,79,],[30,30,30,43,-35,53,30,30,-34,-35,53,53,-35,43,30,30,30,30,-31,53,30,30,30,30,-17,-18,-19,-20,-32,53,53,53,53,]),'TRUE':([22,],[37,]),'FALSE':([22,],[38,]),'MAS':([25,27,28,29,32,33,34,36,39,47,56,57,71,72,73,74,75,76,77,78,79,],[42,49,-35,52,-34,-35,52,52,-35,42,-31,52,-17,-18,-19,-20,-32,52,52,52,52,]),'POR':([25,28,29,32,33,34,36,39,47,56,57,71,72,73,74,75,76,77,78,79,],[44,-35,54,-34,-35,54,54,-35,44,-31,54,54,54,-19,-20,-32,54,54,54,54,]),'DIVIDIDO':([25,28,29,32,33,34,36,39,47,56,57,71,72,73,74,75,76,77,78,79,],[45,-35,55,-34,-35,55,55,-35,45,-31,55,55,55,-19,-20,-32,55,55,55,55,]),'MAYQUE':([32,36,39,56,71,72,73,74,75,],[-34,61,-35,-31,-17,-18,-19,-20,-32,]),'MENQUE':([32,36,39,56,71,72,73,74,75,],[-34,62,-35,-31,-17,-18,-19,-20,-32,]),'IGUALQUE':([32,36,39,56,71,72,73,74,75,],[-34,63,-35,-31,-17,-18,-19,-20,-32,]),'NIGUALQUE':([32,36,39,56,71,72,73,74,75,],[-34,64,-35,-31,-17,-18,-19,-20,-32,]),'PARDER':([32,39,46,56,57,65,66,67,68,69,71,72,73,74,75,],[-34,-35,69,-31,75,-21,-22,-23,-24,-33,-17,-18,-19,-20,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,2,],[1,8,]),'instruccion':([0,2,],[2,2,]),'expresion2':([14,26,],[24,46,]),'expresion':([18,20,22,30,31,52,53,54,55,61,62,63,64,],[29,34,36,56,57,71,72,73,74,76,77,78,79,]),'expresion3':([22,],[35,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones_lista','gramatica.py',145),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista','gramatica.py',146),
  ('instruccion -> INT ID IGUAL expresion2 PTCOMA','instruccion',5,'p_instrucciones_variables','gramatica.py',150),
  ('instruccion -> INT ID IGUAL ENTERO PTCOMA','instruccion',5,'p_instrucciones_variables','gramatica.py',151),
  ('instruccion -> STRING ID IGUAL CADENA PTCOMA','instruccion',5,'p_instrucciones_variables','gramatica.py',152),
  ('instruccion -> STRING ID IGUAL CADENA MAS CADENA PTCOMA','instruccion',7,'p_instrucciones_variables','gramatica.py',153),
  ('instruccion -> DOUBLE ID IGUAL DECIMAL PTCOMA','instruccion',5,'p_instrucciones_variables','gramatica.py',154),
  ('instruccion -> DOUBLE ID IGUAL expresion PTCOMA','instruccion',5,'p_instrucciones_variables','gramatica.py',155),
  ('instruccion -> FLOAT ID IGUAL DECIMAL PTCOMA','instruccion',5,'p_instrucciones_variables','gramatica.py',156),
  ('instruccion -> FLOAT ID IGUAL expresion PTCOMA','instruccion',5,'p_instrucciones_variables','gramatica.py',157),
  ('instruccion -> BOOLEAN ID IGUAL expresion3 PTCOMA','instruccion',5,'p_instrucciones_variables','gramatica.py',158),
  ('instruccion -> INT ID PTCOMA','instruccion',3,'p_instrucciones_variables','gramatica.py',159),
  ('instruccion -> STRING ID PTCOMA','instruccion',3,'p_instrucciones_variables','gramatica.py',160),
  ('instruccion -> DOUBLE ID PTCOMA','instruccion',3,'p_instrucciones_variables','gramatica.py',161),
  ('instruccion -> FLOAT ID PTCOMA','instruccion',3,'p_instrucciones_variables','gramatica.py',162),
  ('instruccion -> BOOLEAN ID PTCOMA','instruccion',3,'p_instrucciones_variables','gramatica.py',163),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','gramatica.py',167),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','gramatica.py',168),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','gramatica.py',169),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','gramatica.py',170),
  ('expresion2 -> ENTERO MAS ENTERO','expresion2',3,'p_expresion_binariaInt','gramatica.py',178),
  ('expresion2 -> ENTERO MENOS ENTERO','expresion2',3,'p_expresion_binariaInt','gramatica.py',179),
  ('expresion2 -> ENTERO POR ENTERO','expresion2',3,'p_expresion_binariaInt','gramatica.py',180),
  ('expresion2 -> ENTERO DIVIDIDO ENTERO','expresion2',3,'p_expresion_binariaInt','gramatica.py',181),
  ('expresion3 -> expresion MAYQUE expresion','expresion3',3,'p_expresion_booleana','gramatica.py',189),
  ('expresion3 -> expresion MENQUE expresion','expresion3',3,'p_expresion_booleana','gramatica.py',190),
  ('expresion3 -> expresion IGUALQUE expresion','expresion3',3,'p_expresion_booleana','gramatica.py',191),
  ('expresion3 -> expresion NIGUALQUE expresion','expresion3',3,'p_expresion_booleana','gramatica.py',192),
  ('expresion3 -> TRUE','expresion3',1,'p_expresion_booleana2','gramatica.py',200),
  ('expresion3 -> FALSE','expresion3',1,'p_expresion_booleana2','gramatica.py',201),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','gramatica.py',205),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_expresion_agrupacion','gramatica.py',210),
  ('expresion2 -> PARIZQ expresion2 PARDER','expresion2',3,'p_expresion_agrupacion2','gramatica.py',215),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','gramatica.py',220),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_number','gramatica.py',221),
]
